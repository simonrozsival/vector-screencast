{"version":3,"sources":["webpack:///webpack/bootstrap 6938ea054cb894e2e414","webpack:///./src/workers/RecordingWorker.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA,uBAAsB,0BAA0B;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAAyC,+DAA+D,EAAE;AAC1G,iDAAgD,2BAA2B,iCAAiC,EAAE,EAAE;AAChH,yCAAwC,4CAA4C;AACpF,kBAAiB;AACjB;AACA;AACA;AACA,uCAAsC,wBAAwB;AAC9D;AACA;AACA;AACA;AACA,+CAA8C,2BAA2B,kCAAkC,EAAE,EAAE;AAC/G;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA8C,uBAAuB;AACrE,qDAAoD,2BAA2B;AAC/E,0DAAyD,qDAAqD;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAC","file":"recording-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6938ea054cb894e2e414\n **/","var CMD_INIT = \"init\";\nvar CMD_PUSH_DATA = \"pushData\";\nvar CMD_FINISH = \"finish\";\nfunction error(msg) {\n    console.log(\"Recording Worker error: \" + msg);\n    this.postMessage({ type: \"error\", msg: msg });\n}\nvar audioProcessor = null;\nthis.onmessage = function (e) {\n    var _this = this;\n    var msg = e.data;\n    if (!msg.hasOwnProperty(\"cmd\")) {\n        console.log(\"Recording Worker error: message does not contain 'cmd' property.\");\n    }\n    try {\n        switch (msg.cmd) {\n            case CMD_INIT:\n                audioProcessor = new BinaryAudioStreamingProcessor({\n                    host: msg.host,\n                    port: msg.port,\n                    path: msg.path,\n                    secured: false,\n                    opened: function () { return console.log(\"Streaming was initialised successfully.\"); },\n                    finished: function (files) { return _this.postMessage({ type: \"finished\", files: files }); },\n                    error: function () { return error(\"Can't init audio processor\"); }\n                });\n                break;\n            case CMD_PUSH_DATA:\n                if (!audioProcessor.PushData(msg.data)) {\n                    this.postMessage({ type: \"network-error\" });\n                }\n                break;\n            case CMD_FINISH:\n                audioProcessor.Finish({\n                    success: function (data) { return _this.postMessage({ error: false, files: data.files }); },\n                    error: error\n                });\n                break;\n            default:\n                error(\"Unknown cmd \" + msg.cmd);\n                break;\n        }\n    }\n    catch (e) {\n        console.log(\"Streaming Worker ERROR!\", e);\n    }\n};\nvar BinaryAudioStreamingProcessor = (function () {\n    function BinaryAudioStreamingProcessor(cfg) {\n        var _this = this;\n        this.cfg = cfg;\n        this.connected = false;\n        this.socket = null;\n        this.Finish = function (cfg) {\n            cfg = cfg || {};\n            if (!!this.socket && this.socket.readyState === WebSocket.OPEN) {\n                console.log(\"Closing stream.\");\n                this.socket.send(JSON.stringify({\n                    type: \"end\"\n                }));\n            }\n            else {\n                this.cfg.error(\"Can't close stream - connection does not exist.\");\n            }\n        };\n        this.numberOfSentBinaryMessages = 0;\n        try {\n            var protocol = cfg.secured ? \"wss://\" : \"ws://\";\n            this.url = protocol + cfg.host + \":\" + cfg.port + cfg.path;\n            console.log(\"Trying to connnect to: \", this.url);\n            this.socket = new WebSocket(this.url);\n            this.socket.onopen = function () { return _this.OnOpen(); };\n            this.socket.onerror = function (error) { return _this.Error(error); };\n            this.socket.onmessage = function (response) { return _this.ReceiveData(JSON.parse(response.data)); };\n        }\n        catch (e) {\n            console.log(\"Error while uploading audio to remote server:\", e);\n            this.cfg.error(\"Can't connect to the audio server.\");\n        }\n    }\n    BinaryAudioStreamingProcessor.prototype.OnOpen = function () {\n        console.log(\"Connection to audio server opened.\");\n        this.socket.send(JSON.stringify({\n            type: \"start\",\n            channels: this.cfg.channels || 1,\n            sampleRate: this.cfg.sampleRate || 44100,\n            bitDepth: this.cfg.bitDepth || 16\n        }));\n        this.connected = true;\n        this.cfg.opened();\n    };\n    BinaryAudioStreamingProcessor.prototype.Error = function (error) {\n        console.log(\"Connection error: \", error);\n        this.cfg.error(\"Connection error: \" + error.toString());\n    };\n    BinaryAudioStreamingProcessor.prototype.PushData = function (data) {\n        if (this.socket) {\n            if (this.socket.readyState !== WebSocket.OPEN) {\n                this.Error(\"Connection was lost\");\n                this.socket = null;\n                return false;\n            }\n            else {\n                this.socket.send(this.ConvertTo16BitInt(data).buffer);\n                return true;\n            }\n        }\n        else {\n            return false;\n        }\n    };\n    BinaryAudioStreamingProcessor.prototype.ConvertTo16BitInt = function (buffer) {\n        var tmp = new Int16Array(buffer.length);\n        for (var i = 0; i < buffer.length; i++) {\n            tmp[i] = Math.min(1, buffer[i]) * 0x7FFF;\n        }\n        return tmp;\n    };\n    ;\n    BinaryAudioStreamingProcessor.prototype.ReceiveData = function (data) {\n        if (data.error === false) {\n            console.log(\"Result: SUCCESS - data was written into \", data.files);\n            this.cfg.finished(data.files);\n        }\n        else {\n            this.cfg.error(\"Error was reported.\");\n        }\n    };\n    return BinaryAudioStreamingProcessor;\n})();\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/workers/RecordingWorker.ts\n ** module id = 0\n ** module chunks = 2\n **/"],"sourceRoot":""}