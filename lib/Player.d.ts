import Video from './VideoData/Video';
import AudioPlayer from './AudioData/AudioPlayer';
import VideoEvents from './Helpers/VideoEvents';
import PlayerUI from './UI/PlayerUI';
import { DrawingStrategy } from './Drawing/DrawingStrategy';
import VideoTimer from './Helpers/VideoTimer';
import Path from './Drawing/Path';
import { PlayerSettings } from './Settings/PlayerSettings';
import Color from './UI/Color';
export default class Player {
    private settings;
    protected video: Video;
    protected audio: AudioPlayer;
    protected ui: PlayerUI;
    protected drawer: DrawingStrategy;
    protected isPlaying: boolean;
    protected timer: VideoTimer;
    protected drawnPath: Path;
    protected drawnSegment: number;
    private oldWidth;
    private oldHeight;
    private events;
    Events: VideoEvents;
    constructor(id: string, settings: PlayerSettings);
    private MonitorResize(container);
    private ProcessVideoData(data);
    Play(): void;
    Pause(): void;
    private ticking;
    Tick(): void;
    private lastMouseMoveState;
    private Sync();
    protected MoveToNextChunk(): void;
    JumpTo(progress: number): void;
    private RedrawCurrentScreen();
    private ReachedEnd();
    protected ClearCavnas(color: Color): void;
    protected DrawSegment(): void;
    private wasPlayingWhenBusy;
    private busyLevel;
    protected Busy(): void;
    protected Ready(): void;
}
