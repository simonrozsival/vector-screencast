/**
 * GULP file for Vector Video project
 * @author	Šimon Rozsíval
 * @contact	simon@roszival.com
 * @licence	MIT 
 */
 
var concat = require('gulp-concat');
var del = require("del");
var fs = require("fs");
var gulp = require("gulp");
var less = require("gulp-less");
var sourcemaps = require('gulp-sourcemaps');
var merge = require('merge-stream');
var minifyCSS = require('gulp-minify-css');
var path = require("path");
var rename = require('gulp-rename');
var tsc = require('gulp-tsc');

/**
 * Remove all files generated by gulp in all default tasks
 */

gulp.task("clean", function(cb) {
	del(["default"], cb);	
});

/**
 * Gulp task for transpiling .LESS files into .CSS
 * For every subdirectory in ./public/themes, all it's *.less files are merged into one,
 * they are transpiled into a css, this css is minified and then saved into ./public/themes/<foldername>.min.css,
 * where <foldername> is the name of the theme's subdirectory.
 * This task is based on https://github.com/gulpjs/gulp/blob/master/docs/recipes/running-task-steps-per-folder.md
 */

function getFolders(dir) {
    return fs.readdirSync(dir)
		      .filter(function(file) {
		        return fs.statSync(path.join(dir, file)).isDirectory();
		      });
}

var themesPath = "./src/Themes"; 
gulp.task("compile-less", function() {
   var folders = getFolders(themesPath);
   var tasks = folders.map(function(folder) {
	  return gulp.src(path.join(themesPath, folder, "/**/*.less"))
  				.pipe(sourcemaps.init())
				.pipe(less())
				.pipe(minifyCSS())
  				.pipe(sourcemaps.write())
        		.pipe(rename(folder + '.min.css'))
				.pipe(gulp.dest("./release/public/css"));				
   });

   return merge(tasks);	
});

/**
 * Compile the VectorVideo JavaScript library
 * The source of VectorVideo is written in TypeScript and must be transpiled to pure Javascript.
 */
var libProject = require("./src/VectorVideo/tsconfig.json"); 
gulp.task("lib", function() {
	return gulp.src("./src/js/VectorVideo/**/*.ts")
						.pipe(sourcemaps.init())
						.pipe(tsc(libProject.compilerOptions))
						.pipe(concat("vector-video.js"))
						.pipe(sourcemaps.write())
						.pipe(gulp.dest("./release/public/js"));
});

/**
 * Compile the DEMO server
 * The DEMO server is written in TypeScript and must be transpiled to pure JavaScript.
 */
var serverProject = require("./src/DemoServer/tsconfig.json");
gulp.task("demo-server", function(cb) {	
	return gulp.src("./src/DemoServer/**/*.ts")
					.pipe(sourcemaps.init())
					.pipe(tsc(serverProject.compilerOptions))
					.pipe(concat("server.js"))
					.pipe(sourcemaps.write())
					.pipe(gulp.dest("./release/"));
});

// default: compile both the JS library and the server
gulp.task("default", ["lib", "demo-server", "compile-less"]);