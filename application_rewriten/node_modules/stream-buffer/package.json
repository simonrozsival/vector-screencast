{
  "name": "stream-buffer",
  "version": "1.0.0",
  "description": "Buffer a stream and replay data at any time",
  "main": "index.js",
  "scripts": {
    "test": "tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:parshap/node-stream-buffer.git"
  },
  "keywords": [
    "stream",
    "buffer"
  ],
  "author": {
    "name": "Parsha Pourkhomami"
  },
  "license": "Public Domain",
  "bugs": {
    "url": "https://github.com/parshap/node-stream-buffer/issues"
  },
  "dependencies": {
    "through": "~2.3.4"
  },
  "devDependencies": {
    "tape": "~2.0.0"
  },
  "readme": "# stream-buffer\n\nCreate a writable stream that will save all data written to a buffer.\nThe buffer can be \"replayed\" into another writable stream at any time.\n\nThe buffer stream will have a `stream.replay()` method which works like\n`stream.pipe()` but will re-write all data regardless of when the\nfunction is called.\n\n# Example\n\n```js\nvar buffer = require(\"buffer\");\nvar stream = require(\"fs\")\n\t.createReadStream(\"file\")\n\t.pipe(buffer());\n\nsetTimeout(function() {\n\t// At any time ...\n\t// Replay the buffer into another writable stream and receive all\n\t// data events from the very first one to the \"end\" event\n\tstream.replay(require(\"fs\").createWriteStream(\"file\"));\n}, 100);\n```\n\n# Installation \n\n```\nnpm install stream-buffer\n```\n",
  "readmeFilename": "README.md",
  "_id": "stream-buffer@1.0.0",
  "dist": {
    "shasum": "046a00efe40e0f6f1da69e33b0ff54660c99f814",
    "tarball": "http://registry.npmjs.org/stream-buffer/-/stream-buffer-1.0.0.tgz"
  },
  "_from": "stream-buffer@1.0.0",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "parshap",
    "email": "supster+npm@gmail.com"
  },
  "maintainers": [
    {
      "name": "parshap",
      "email": "supster+npm@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "046a00efe40e0f6f1da69e33b0ff54660c99f814",
  "_resolved": "https://registry.npmjs.org/stream-buffer/-/stream-buffer-1.0.0.tgz",
  "homepage": "https://github.com/parshap/node-stream-buffer"
}
